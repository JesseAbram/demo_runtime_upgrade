
// Generated by halva-cli
// A simple test to check global scope
//
describe('Halva test', () => {
  describe('Runtime Upgrade', () => {
    it('wasm upgrade', async () => {
      const setTo = "12"
      let upgraded = false
      const somethingFirst = await halva.polkadot.query.templateModule.something()
      console.log({somethingFirst: somethingFirst.toHuman()})
      try {
        const tx = halva.polkadot.tx.templateModule.doSomething(setTo);
        await passes(tx, 'doSomething', alicePair);
      } catch (e) {
        console.log("already upgraded blockchain")
        upgraded = true
      }
      const something = await halva.polkadot.query.templateModule.something()
      console.log({something: something.toHuman()})
      const mock = { something: setTo, sth_else: true }
      if (upgraded) {
        if (something.toHuman().seth_else) {
          const tx = halva.polkadot.tx.templateModule.doSomething(setTo, true);
          await passes(tx, 'doSomething', alicePair);
          assert.deepEqual(something.toHuman(), mock)
        } else {
          const somethingAfter = await halva.polkadot.query.templateModule.something()
          console.log({somethingAfter: somethingAfter.toHuman()})
          assert.deepEqual(somethingAfter.toHuman(), mock)
        }
      } else {
        assert.equal(something, setTo)
      }
    })

  });
});
